#!/usr/bin/env python
"""
Fun version that I made
harder to read...
My linter hates me! :)
"""

import os
import sys
import argparse
import subprocess
import random
import webbrowser as aaaaaaaaaaaaaaaaa


def a():
    aa = argparse.ArgumentParser()
    aaa = aa.add_argument_group('required arguments')
    aaa.add_argument("-p", "--a", help="Port", required=True)
    aa.add_argument("-c", "--aa", help="CIDR", required=False)
    aa.add_argument("-m", "--aaa", action="store_true", help="Multi")
    aa.add_argument("-w", "--aaaa", action="store_true", help="Web")
    aaaa = aa.parse_args()
    return aaaa


def aa(a, aaa, aaaaaaa=None) -> bool:
    if a == "80":
        aaaa = "50"
    else:
        aaaa = "500"
    if aaaaaaa:
        aaaaa = aaaaaaa
    else:
        aaaaa = " -iR " + aaaa
    aaaaaa = f"nmap -q {aaaaa} -p {a} -oG {aaa}"
    aaaaaaaa = subprocess.Popen(
        aaaaaa,
        shell=True,
        stdout=subprocess.PIPE,
        stderr=subprocess.PIPE
    )
    aaaaaaaaa, aaaaaaaaaa = aaaaaaaa.communicate()
    aaaaaaaaaaaaa = aaaaaaaa.returncode
    if aaaaaaaaaaaaa != 0:
        return False
    return True


def aaa(aaaa) -> bool:
    if not os.path.exists(aaaa):
        return False
    with open(aaaa, "r") as aa:
        for a in aa:
            if "open" in a:
                return True
    return False


def aaaa(a):
    try:
        os.remove(a)
    except OSError:
        pass


def aaaaaa(a):
    aa = []
    with open(a, "r") as aaa:
        for aaaa in aaa:
            if "open" in aaaa:
                aa.append(aaaa.split()[1])
    return aa


def aaaaaaa():
    aaaaaaaaaa = a()
    aaaaaaaaaaaaaaaaaa = "http://"
    aaaaaaaaaaaaaaaaaaa = "https://"
    aaaaaaaaaaaaaaaaaaaa = "80"
    aaaaaaaaaaaaaaaaaaaaa = "443"
    aaaaaaaaaaa = "aaaaaaaaaa"
    aaaaaaaaaaaa = aaaaaaaaaa.a
    aaaa(aaaaaaaaaaa)
    if aaaaaaaaaa.aa:
        if aaaaaaaaaa.aaa:
            sys.exit(1)
        aaaaaaaaaaaaa = aaaaaaaaaa.aa
        if not aa(aaaaaaaaaaaa, aaaaaaaaaaa, aaaaaaaaaaaaa):
            sys.exit(1)
        if not aaa(aaaaaaaaaaa):
            aaaa(aaaaaaaaaaa)
            sys.exit(1)
        aaaaaaaaaaaaaa = aaaaaa(aaaaaaaaaaa)
        for aaaaaaaaaaaaaaa in aaaaaaaaaaaaaa:
            print(aaaaaaaaaaaaaaa)
    if aaaaaaaaaa.aa is None:
        while not aaa(aaaaaaaaaaa):
            if not aa(aaaaaaaaaaaa, aaaaaaaaaaa):
                sys.exit(1)
        aaaaaaaaaaaaaa = aaaaaa(aaaaaaaaaaa)
        if aaaaaaaaaa.aaa:
            if len(aaaaaaaaaaaaaa) < 2:
                aaaa(aaaaaaaaaaa)
                while not aaa(aaaaaaaaaaa):
                    if not aa(aaaaaaaaaaaa, aaaaaaaaaaa):
                        sys.exit(1)
                aaaaaaaaaaaaaa = aaaaaaaaaaaaaa + aaaaaa(aaaaaaaaaaa)
            for aaaaaaaaaaaaaaa in aaaaaaaaaaaaaa:
                print(aaaaaaaaaaaaaaa)
        aaaaaaaaaaaaaaaa = random.choice(aaaaaaaaaaaaaa)
        if not aaaaaaaaaa.aaa:
            aaaaaaaaaaaaaa = [aaaaaaaaaaaaaaaa]
            print(aaaaaaaaaaaaaaaa)
    if aaaaaaaaaa.aaaa:
        for aaaaaaaaaaaaaaa in aaaaaaaaaaaaaa:
            if aaaaaaaaaaaa == aaaaaaaaaaaaaaaaaaaa:
                aaaaaaaaaaaaaaaaa.open(f"{aaaaaaaaaaaaaaaaaa}{aaaaaaaaaaaaaaa}")
            elif aaaaaaaaaaaa == aaaaaaaaaaaaaaaaaaaaa:
                aaaaaaaaaaaaaaaaa.open(f"{aaaaaaaaaaaaaaaaaaa}{aaaaaaaaaaaaaaa}")
            else:
                aaaaaaaaaaaaaaaaa.open(f"{aaaaaaaaaaaaaaaaaa}{aaaaaaaaaaaaaaa}:{aaaaaaaaaaaa}")
    aaaa(aaaaaaaaaaa)


if __name__ == "__main__":
    aaaaaaa()
